
namespace :mpn do 
  desc "get mpn info"
  task :get_mpn => :environment do 
     
    all_mpn = AllPart.all
    all_mpn.each do |item|
        time =  (Time.new.strftime('%Y-%m-%d %H:%M:%S').to_s.to_time.to_i - item.updated_at.strftime('%Y-%m-%d %H:%M:%S').to_s.to_time.to_i)/86400.00
        part_day = format("%.2f",time)
        #Rails.logger.info("11111111111111111111111111111")
        #Rails.logger.info(Time.new.strftime('%Y-%m-%d %H:%M:%S').inspect)
        #Rails.logger.info(item.updated_at.strftime('%Y-%m-%d %H:%M:%S').inspect)
        #Rails.logger.info(part_day.inspect)
        #Rails.logger.info("11111111111111111111111111111111")
        if part_day.to_f > 2      
            mpn = item.mpn
            #mpn = "LM2937IMP"
            url = 'http://api.findchips.com/v1/search?apiKey=RDQCwiQN4yhvRYKulcgw&part='
            url += CGI::escape(mpn)
            #Rails.logger.info(mpn.inspect)
            begin
                puts mpn.inspect
                #resp = Net::HTTP.get_response(URI.parse(url))
                resp = Net::HTTP.get_response(URI(url))
            rescue
                puts "----try"
                puts mpn.inspect
                puts "----try"
                #resp = Net::HTTP.get_response(URI.parse(url))
                sleep 5
                retry
            end
            server_response = JSON.parse(resp.body)           
            info_mpn = InfoPart.new
            info_mpn.mpn = mpn
            info_mpn.info = resp.body
            info_mpn.save
            item.updated_at = Time.new.strftime('%Y-%m-%d %H:%M:%S')
            item.save
        end
    end           
  end  


 
end  
